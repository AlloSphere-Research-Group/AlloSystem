#=========================================================================
# Common rules
#=========================================================================

CPPFLAGS	+= $(EXT_CPPFLAGS)
LDFLAGS		+= $(EXT_LDFLAGS)

CFLAGS		:= $(CPPFLAGS) $(CFLAGS)
CXXFLAGS	:= $(CFLAGS) $(CXXFLAGS)

DEPFLAGS	=
ifneq ($(DEP_TRACK), 0)
	DEPFLAGS = -MMD -MF $(basename $@).dep
endif

#--------------------------------------------------------------------------
# Rules
#--------------------------------------------------------------------------

# Build object file from C++ source
$(OBJ_DIR)%.o: %.cpp
	@echo CXX $< $@
	$(CXX) -c $(CXXFLAGS) $< -o $@ $(DEPFLAGS)

# Build object file from C source
$(OBJ_DIR)%.o: %.c
	@echo CC $< $@
	$(CC) -c $(CFLAGS) $< -o $@ $(DEPFLAGS)

-include $(wildcard $(OBJ_DIR)*.dep)
	
# Build object file from Obj-C++ source
$(OBJ_DIR)%.o: %.mm
	@echo CC $< $@
	$(CXX) -c $(CFLAGS) $< -o $@$@

all: $(SLIB_PATH)

# Build static library
$(SLIB_PATH): createFolders $(addprefix $(OBJ_DIR), $(OBJS))
	@echo AR $@
	@$(RM) $@
	$(AR) $@ $(filter %.o, $^) $(STATIC_LIB_FLAGS)
#	@$(RANLIB) $@
#	libtool --mode=link --tag=CXX $(filter %.o, $^) $(STATIC_LIB_FLAGS) -o $@
#	@libtool -static $@ $(patsubst %, $(DEV_DIR)lib/lib%.a, $(STATIC_LIBS)) -o $@


# Dummy target to force rebuilds
FORCE:

createFolders:
	@mkdir -p $(BIN_DIR)
	@mkdir -p $(OBJ_DIR)
	@mkdir -p $(BUILD_DIR)include
	@mkdir -p $(BUILD_DIR)lib


# Create file with settings for linking to external libraries
external:
	@echo '\
CPPFLAGS += $(EXT_CPPFLAGS) \r\n\
LDFLAGS  += $(EXT_LDFLAGS) \
'> Makefile.external
