#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\begin_preamble
\usepackage{color}
\definecolor{gray5}{rgb}{0.5,0.5,0.5}
\definecolor{gray9}{rgb}{0.95,0.95,0.95}

\usepackage{listings}
\lstset{
basicstyle=\footnotesize\ttfamily,
tabsize=4,
aboveskip=2em,
belowskip=2em,
backgroundcolor={\color{gray9}},
commentstyle={\color{gray5}},
language=C++,
frame=lines,
xleftmargin=1em,
framexleftmargin=1em,
%framexrightmargin=5pt,
%breaklines=true
}
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family sfdefault
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement H
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder false
\pdf_colorlinks false
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry true
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 1in
\topmargin 1in
\rightmargin 1in
\bottommargin 1in
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
AlloSystem Install Tutorial
\end_layout

\begin_layout Author
Lance Putnam and Lars Knudsen
\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Standard
This tutorial explains how to install AlloSystem under Linux Ubuntu, Mac
 OS X, and Windows.
 The main means of operating AlloSystem is through a Unix-like shell and
 GNU tools 
\family typewriter
GCC
\family default
 and 
\family typewriter
make
\family default
.
 The first part of the tutorial explains how to set up a Unix environment
 and install the necessary tools.
 The second part describes how to install AlloSystem.
 The last part explains how to compile and run custom applications using
 AlloSystem.
\end_layout

\begin_layout Subsection
Supported Operating Systems
\end_layout

\begin_layout Standard
Currently, the following operating systems are known to work with AlloSystem:
\end_layout

\begin_layout Itemize
Linux Ubuntu
\end_layout

\begin_layout Itemize
Mac OS X 10.5.x (Leopard), 10.6.x (Snow Leopard), 10.7.x (Lion), 10.8.x (Mountain
 Lion)
\end_layout

\begin_layout Itemize
Windows 7
\end_layout

\begin_layout Standard
For Windows users, it is highly recommended to install Linux Ubuntu.
 This can be done easily and safely using 
\begin_inset CommandInset href
LatexCommand href
name "Wubi"
target "http://www.ubuntu.com/download/desktop/windows-installer"

\end_inset

.
 If you choose to use operating systems or tools other than those recommended
 in this tutorial, then 
\emph on
you are on your own
\emph default
.
\end_layout

\begin_layout Section
Get Development Tools
\end_layout

\begin_layout Standard
The first step is to obtain the development tools necessary to compile and
 run AlloSystem programs.
 Skip to the platform you are using and follow the instructions there.
\end_layout

\begin_layout Subsection
Linux Ubuntu
\end_layout

\begin_layout Standard
Ensure that both 
\family typewriter
make
\family default
 and 
\family typewriter
g++
\family default
 are installed by entering the following command in the terminal:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

$ sudo apt-get install make g++
\end_layout

\end_inset


\end_layout

\begin_layout Standard
When that finishes, proceed to 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Install-AlloSystem"

\end_inset

.
\end_layout

\begin_layout Subsection
Mac OS X
\end_layout

\begin_layout Subsubsection*
Before Beginning
\end_layout

\begin_layout Standard
Before beginning to install the development tools, it is crucial that you
 complete any OS updates.
 If you don't, the installation of Xcode may fail with an ``unknown error''.
 (This is a known issue with OS X 10.6.x Snow Leopard and Xcode 3.2.6.) Do system
 updates by clicking the Apple symbol in the upper-left corner of the screen
 and then selecting ``Software Update...''.
 Let the updater finish its course which may require restarting.
 Repeat this update process until there are no more updates.
\end_layout

\begin_layout Subsubsection*
Get Apple Development Tools
\end_layout

\begin_layout Standard
To get the Apple development tools, start by going to 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://developer.apple.com/programs/register
\end_layout

\end_inset

.
 Click the `Sign In' button to login or create a new account.
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename fig/OSXDev1.jpg
	lyxscale 10
	width 50col%

\end_inset


\end_layout

\begin_layout Standard
Under `Dev Centers' click 'Mac'.
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename fig/OSXDev2.jpg
	lyxscale 10
	width 60col%

\end_inset


\end_layout

\begin_layout Standard
Scroll down and click 'View all downloads'.
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename fig/OSXDev3.jpg
	lyxscale 10
	width 60col%

\end_inset


\end_layout

\begin_layout Standard
This takes you to a search page.
 
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename fig/OSXDev4.jpg
	lyxscale 10
	width 60col%

\end_inset


\end_layout

\begin_layout Standard
Enter `Xcode' into the search bar and get the latest version of Xcode 
\emph on
and
\emph default
 Command Line Tools that work for your version of OS X.
 (Note that with older versions of Xcode the command line tools are included
 with Xcode.) Unfortunately, every major version of OS X seems to have a
 new and backwards-incompatible version of Xcode.
 Use the following table to determine which version of Xcode and Command
 Line Tools to install with what version of OS X:
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="2">
<features booktabs="true" tabularvalignment="middle">
<column alignment="left" valignment="top" width="0pt">
<column alignment="left" valignment="top" width="0">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
OS X Version
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
What To Install
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10.5 (Leopard)
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Xcode 3.1.4 Developer Tools
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10.6 (Snow Leopard)
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Xcode 3.2.6 and iOS SDK 4.3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10.7 (Lion)
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Xcode 4.4.1,
\series bold
 
\series default
Command Line Tools (OS X Lion) - August 2012
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10.8 (Mountain Lion)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Xcode 4.4.1, Command Line Tools (OS X Mountain Lion) - August 2012
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
What tools to install for which version of OS X
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Lion and Mountain Lion, drag and drop Xcode to your Applications folder
\end_layout

\begin_layout Plain Layout
Then run command-line tools installer
\end_layout

\end_inset


\end_layout

\begin_layout Standard
After downloading the disk images (
\family typewriter
.dmg
\family default
 file), double-click them to mount them (if not done automatically).
 If you downloaded either Xcode 3.1.4 or Xcode 3.2.6, double-click the appropriate
 package (
\family typewriter
.pkg
\family default
) file inside the mounted drive to run the installer.
 If you downloaded Xcode 4.4.1, then drag-n-drop the Xcode icon into the 
\family typewriter
/Applications
\family default
 folder and then run the Command Line Tools installer.
 When installation is complete, you will have both an editor and all the
 command-line tools we will be using such as 
\family typewriter
make
\family default
 and 
\family typewriter
g++
\family default
.
\end_layout

\begin_layout Subsubsection*
Install Package Manager
\end_layout

\begin_layout Standard
We will use Macports, a package management tool for OS X, to install AlloSystem
 dependencies.
 Download and install the latest version from 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://www.macports.org/install.php
\end_layout

\end_inset

.
 Make sure to install the correct version for your version of OSX (Leopard,
 Snow Leopard, Lion, or Mountain Lion).
\end_layout

\begin_layout Subsection
Windows and MinGW/MSYS
\end_layout

\begin_layout Subsubsection*
Install Code Editor
\end_layout

\begin_layout Standard
You will need to install an editor that recognizes and syntax colorizes
 source code.
 We recommend either Visual Studio Express or Notepad++.
 Visual Studio is a full-blown IDE while Notepad++ is a lightweight text
 editor.
 Notepad++ is preferred as it starts up much more quickly.
\end_layout

\begin_layout Subsubsection*
Install MinGW and MSYS
\end_layout

\begin_layout Standard
MinGW is an emulation of the GCC compiler suite.
 MSYS provides a Unix-like CLI and commands (bash, make, grep, etc.).
 Download and run the latest version of the MinGW installer mingw-get-inst-xxxxx
xxx.exe from 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://sourceforge.net/projects/mingw/files/Installer/mingw-get-inst/
\end_layout

\end_inset

.
 Be careful when installing not to install MinGW in a path containing spaces,
 such as 
\family typewriter
C:
\backslash
Program Files (x86)
\backslash
MinGW
\family default
, as this will cause a lot of problems later on.
 The rest of the tutorial assumes 
\family typewriter
C:
\backslash
MinGW
\family default
 is the install directory.
 If you choose another install directory just replace any following instances
 of 
\family typewriter
C:
\backslash
MinGW
\family default
 with your path.
 When asked to ``Select Components'', choose
\end_layout

\begin_layout Itemize
C Compiler
\end_layout

\begin_layout Itemize
C++ Compiler
\end_layout

\begin_layout Itemize
MSYS Basic System
\end_layout

\begin_layout Standard
Finish the MinGW installer.
 
\end_layout

\begin_layout Standard
Next, bring up a DOS prompt.
 Do this by clicking the Windows button in the lower-left corner, typing
 
\family typewriter
cmd.exe
\family default
 into the search bar, and pressing enter.
 At the DOS prompt, execute the following commands:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

cd C:
\backslash
MinGW
\backslash
bin
\end_layout

\begin_layout Plain Layout

mingw-get update
\end_layout

\begin_layout Plain Layout

mingw-get install msys-wget msys-unzip msys-man
\end_layout

\end_inset

This will install additional programs for MSYS that we will need later to
 install dependencies.
 When the install command is finished, close the DOS prompt window and move
 on to the next step.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Next, you need to add 
\family typewriter
C:
\backslash
MinGW
\backslash
bin
\family default
 (or wherever you installed MinGW to) to the PATH environment variable.
 On your desktop, right click ``My Computer'' and select ``Properties''.
 In the ``System Properties'' window that pops up, click the ``Advanced''
 tab and then the button labeled ``Environment Variables''.
 On the new window that pops up, scroll down the list in the ``System variables'
' panel until you see the PATH variable.
 Click on PATH and then click the ``Edit...'' button.
 Add a 
\family typewriter
;
\family default
 between the last path in the variable and the path you are adding, 
\family typewriter
C:
\backslash
MinGW
\backslash
bin
\family default
.
 Be very careful when editing the PATH environment variable, removing anything
 from it might cause havoc to your system.
\end_layout

\begin_layout Plain Layout
Next, you need to bring up a DOS prompt.
 Do this by clicking the Windows button in the lower-left corner, typing
 
\family typewriter
cmd.exe
\family default
 into the search bar, and pressing enter.
 At the DOS prompt execute the following commands:
\end_layout

\begin_layout Plain Layout
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

mingw-get update
\end_layout

\begin_layout Plain Layout

mingw-get install msys-wget msys-unzip
\end_layout

\end_inset

(
\family typewriter
wget
\family default
 is a standard Unix program for retrieving files from the internet.) If the
 commands don't execute, then check that the PATH environment variable was
 set correctly and reboot the computer and try again.
 At this point, MinGW and MSYS are configured properly.
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Start MSYS
\end_layout

\begin_layout Standard
Open a new MSYS shell (not to be confused with a DOS shell!) by launching
 MSYS from the Start menu or desktop or by running 
\family typewriter
C:
\backslash
MinGW
\backslash
msys
\backslash
1.0
\backslash
msys.bat
\family default
.
 The MSYS shell looks like this:
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename fig/MSYS.png
	lyxscale 10
	width 75col%

\end_inset


\end_layout

\begin_layout Standard
By default, the MSYS directory 
\family typewriter
C:
\backslash
MinGW
\backslash
msys
\backslash
1.0
\family default
 will be mounted as root directory 
\family typewriter
/
\family default
 and as 
\family typewriter
/usr
\family default
/.
 The first time you run MSYS it will create a 
\family typewriter
home
\family default
 directory in 
\family typewriter
C:
\backslash
MinGW
\backslash
msys
\backslash
1.0
\family default
.
 The 
\family typewriter
~
\family default
 (user home) directory will be something like 
\family typewriter
C:
\backslash
MinGW
\backslash
msys
\backslash
1.0
\backslash
home
\backslash
<username>
\family default
.
 Traditional Windows drives, like 
\family typewriter
C:
\family default
 and 
\family typewriter
D:
\family default
, can be accessed as 
\family typewriter
/c
\family default
 or 
\family typewriter
/d
\family default
, respectively.
 Use the 
\family typewriter
mount
\family default
 command to get an overview of all the drive mappings.
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
Install AlloSystem
\begin_inset CommandInset label
LatexCommand label
name "sec:Install-AlloSystem"

\end_inset


\end_layout

\begin_layout Standard
At this point, you should have the appropriate development tools installed.
 In the following instructions, when we say `Unix shell' we mean MSYS for
 Windows users, and the `Terminal' application for Mac OS X and Linux users.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Installing through git:
\end_layout

\begin_layout Plain Layout
$ sudo apt-get install git
\end_layout

\begin_layout Plain Layout
$ git config --global color.ui true
\end_layout

\begin_layout Plain Layout
$ git config --global user.name 
\begin_inset Quotes eld
\end_inset

username
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Plain Layout
$ git config --global user.email 
\begin_inset Quotes eld
\end_inset

user@email.com
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Plain Layout
$ git clone https://github.com/AlloSphere-Research-Group/AlloSystem.git
\end_layout

\begin_layout Plain Layout
$ git clone https://github.com/AlloSphere-Research-Group/GLV.git
\end_layout

\begin_layout Plain Layout
$ git clone https://github.com/LancePutnam/Gamma.git
\end_layout

\begin_layout Plain Layout
-
\end_layout

\begin_layout Plain Layout
https://github.com/AlloSphere-Research-Group/AlloSystem/zipball/aau12f
\end_layout

\begin_layout Plain Layout
https://github.com/AlloSphere-Research-Group/AlloSystem/archive/stable13feb.zip
\end_layout

\end_inset


\end_layout

\begin_layout Standard
First, create a new directory 
\family typewriter
~/code/
\family default
.
 This can be done from the Unix shell with the command
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

$ mkdir ~/code
\end_layout

\end_inset

Next, download the AlloSystem source code  
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://github.com/AlloSphere-Research-Group/AlloSystem/archive/devel.zip
\end_layout

\end_inset

.
 Within the 
\family typewriter
.zip
\family default
 file should be another directory having a name of something like 
\family typewriter
AlloSystem-xxx
\family default
.
 You should move this directory to the directory 
\family typewriter
~/code/
\family default
 you just made.
 After the directory 
\family typewriter
AlloSystem-xxx
\family default
 is moved, rename it to 
\family typewriter
allosystem
\family default
.
\end_layout

\begin_layout Standard
From the Unix shell, `
\family typewriter
cd
\family default
' into the 
\family typewriter
~/code/allosystem/
\family default
 directory.
 If you do `
\family typewriter
ls
\family default
' you should see something like:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

$ ls
\end_layout

\begin_layout Plain Layout

Makefile				alloGLV			allovsr
\end_layout

\begin_layout Plain Layout

Makefile.buildandrun	allocore		doc
\end_layout

\begin_layout Plain Layout

Makefile.common			allocv			linux 
\end_layout

\begin_layout Plain Layout

Makefile.rules			allonect		osx 
\end_layout

\begin_layout Plain Layout

README.md				alloutil		work
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Next, you need to install the necessary dependencies for AlloSystem.
 (Windows users only: you must 
\emph on
deactivate all virus checkers and antispyware programs, such as Windows
 Defender
\emph default
.
 These monitoring programs are know to terminate or halt important configuration
 processes that take place in the following steps.
 If you do not disable them, then the libraries will not get installed properly.)
 Install dependencies with the following commands (notice if you are using
 MinGW/MSYS then you don't need the sudo in front of the command):
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

$ cd allocore
\end_layout

\begin_layout Plain Layout

$ sudo ./install_dependencies.sh
\end_layout

\begin_layout Plain Layout

$ cd ..
\end_layout

\begin_layout Plain Layout

$ cd alloutil
\end_layout

\begin_layout Plain Layout

$ sudo ./install_dependencies.sh
\end_layout

\begin_layout Plain Layout

$ cd ..
\end_layout

\end_inset

If prompted for your password, enter the same password you use to log in
 to the OS.
 Installing all the dependencies may take some time, so please be patient.
 After dependencies are installed, the next step is to build the AlloCore
 and AlloUtil modules with the following commands:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

$ make allocore
\end_layout

\begin_layout Plain Layout

$ make alloutil
\end_layout

\end_inset

To check if the system is installed successfully you can build an example
 by navigating to the 
\family typewriter
~/code/allosystem/allocore
\family default
 folder and then running the following command:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

$ make examples/av/simpleApp.cpp
\end_layout

\end_inset

If a ball with oscillating color shows up, then your system is configured
 correctly.
\end_layout

\begin_layout Section
Build-and-Run Applications
\end_layout

\begin_layout Standard
While AlloSystem is intended to be used mainly as a library, it does provide
 a simple means of building and running custom applications that link to
 AlloSystem.
 It is flexible enough to be used all the way from building simple prototypes
 to creating complex applications.
 This section describes how to setup and use AlloSystem's ``build-and-run''
 capability.
\end_layout

\begin_layout Standard
By default, there are two directories recognized by the AlloSystem build-and-run
 facility: 
\family typewriter
examples/
\family default
 and 
\family typewriter
work/
\family default
.
 The directory 
\family typewriter
examples/
\family default
 contains example source code for libraries.
 The directory 
\family typewriter
work/
\family default
 is for user application source files and thus will be of primary concern
 here.
 You can place any source (
\family typewriter
.cpp
\family default
) files having a 
\family typewriter
main()
\family default
 function in the 
\family typewriter
work/
\family default
 directory (or any subdirectories thereof) and compile and run the source
 with the command
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

$ make work/myfile.cpp
\end_layout

\end_inset

Remember, you must be in 
\family typewriter
~/code/allosystem/
\family default
 when running the 
\family typewriter
make
\family default
 command.
 The executable binary is placed in 
\family typewriter
build/bin/
\family default
 and has the same name as the source file.
 If you would only like to build the application, without also running it,
 then you can append 
\family typewriter
AUTORUN=0
\family default
 to the line above, i.e.,
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

$ make work/myfile.cpp AUTORUN=0
\end_layout

\end_inset


\end_layout

\begin_layout Section
GUI and Sound
\end_layout

\begin_layout Standard
The following instructions are only required if you would like to use graphical
 user interface (GUI) or sound synthesis components in conjunction with
 AlloSystem.
 We use GLV as the GUI toolkit and Gamma as the sound synthesis library.
 Download the source code of each at 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

https://github.com/AlloSphere-Research-Group/GLV/zipball/master
\end_layout

\end_inset

 and 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

https://github.com/LancePutnam/Gamma/zipball/master
\end_layout

\end_inset

.
 Unzip them within the directory 
\family typewriter
~/code
\family default
 (alongside where you installed AlloSystem).
 Rename the GLV and Gamma directories to 
\family typewriter
GLV
\family default
 and 
\family typewriter
Gamma
\family default
.
 From the shell, this will look like
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

$ cd ~/code/
\end_layout

\begin_layout Plain Layout

$ ls
\end_layout

\begin_layout Plain Layout

allosystem
\end_layout

\begin_layout Plain Layout

Gamma
\end_layout

\begin_layout Plain Layout

GLV
\end_layout

\end_inset

Next, build GLV and Gamma using the following commands:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

$ cd ~/code/allosystem
\end_layout

\begin_layout Plain Layout

$ make Gamma
\end_layout

\begin_layout Plain Layout

$ make GLV
\end_layout

\begin_layout Plain Layout

$ make alloGLV
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
Advanced Configuration
\end_layout

\begin_layout Subsection
Custom Project Directories
\begin_inset CommandInset label
LatexCommand label
name "sub:Custom-Project-Directories"

\end_inset


\end_layout

\begin_layout Standard
It is possible to configure AlloSystem to use your own custom project directory
 for its build-and-run facility.
 We will call this your 
\emph on
user directory
\emph default
 and refer to it in this document generically as 
\family typewriter
<userdir>
\family default
 from this point onward.
 The actual name of the user directory can be anything you choose as long
 as it is a valid path, e.g., 
\family typewriter
myprojects
\family default
, 
\family typewriter
mycode
\family default
 or your initials, such as 
\family typewriter
ljp
\family default
.
 Start by creating the directory 
\family typewriter
~/code/allosystem/<userdir>
\family default
/.
 Next, make a copy of the file 
\family typewriter
Makefile.usertemplate
\family default
 and name it 
\family typewriter
Makefile.user.
 Makefile.user
\family default
 must be in the folder
\family typewriter
 ~/code/allosystem/
\family default
 along
\family typewriter
 with Makefile.usertemplate.

\family default
 You can do this from the terminal with the commands
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

$ cd ~/code/allosystem/
\end_layout

\begin_layout Plain Layout

$ cp Makefile.usertemplate Makefile.user
\end_layout

\end_inset

Now, open 
\family typewriter
Makefile.user
\family default
 in an editor and change the line reading
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

#RUN_DIRS += foo/
\end_layout

\end_inset


\end_layout

\begin_layout Standard
to
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

RUN_DIRS += <userdir>/
\end_layout

\end_inset

using the same directory name you created in the previous step.
 Notice the 
\family typewriter
#
\family default
 (comment symbol) is removed.
 Also, do not forget the trailing slash after 
\family typewriter
<userdir>
\family default
.
 Relative paths in 
\family typewriter
RUN_DIRS
\family default
 are relative to the the 
\family typewriter
allosystem/
\family default
 directory.
 At this point, AlloSystem will recognize your user directory as a valid
 build-and-run directory.
 You can add as many user directories as you like to 
\family typewriter
RUN_DIRS
\family default
 remembering to separate them with spaces.
\end_layout

\begin_layout Standard
While it is possible to have as many user build-and-run directories, sometimes
 it is convenient to be able to build and run sources from other directories
 without always having to add them to the 
\family typewriter
RUN_DIRS
\family default
 variable.
 This can be accomplished by creating a symbolic link in one of your valid
 build-and-run directories:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

$ cd ~/code/allosystem/
\end_layout

\begin_layout Plain Layout

$ ln -s sourcedir/ <userdir>/targetdir
\end_layout

\end_inset

This creates a symbolic link to 
\family typewriter
sourcedir/
\family default
 that is treated like the directory 
\family typewriter
<userdir>/targetdir/
\family default
.
\end_layout

\begin_layout Subsection
Linking to Other Libraries
\end_layout

\begin_layout Standard
If your projects need to link to libraries that are not already used by
 AlloSystem, then there is some additional configuration required.
 You can configure this in one of two ways—globally, where all projects
 link to specified libraries, or locally, where only a specific project
 links to specified libraries.
 To set up global linking, simply add the linker flags to your existing
 
\family typewriter
Makefile.user
\family default
 file.
 For example,
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

# Somewhere in Makefile.user ...
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

# Append directories to be searched for include files
\end_layout

\begin_layout Plain Layout

CPPFLAGS += -I/usr/include/
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

# Append directories to be searched for library files
\end_layout

\begin_layout Plain Layout

LDFLAGS += -L/usr/lib/
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

# Append libraries to be linked to
\end_layout

\begin_layout Plain Layout

LDFLAGS += -lfftw3f -lMagick++
\end_layout

\end_inset

If you would only like local linking, that is, linking to libraries for
 only one project, then place all the project's source files along with
 a file 
\family typewriter
flags.txt
\family default
 in a subdirectory of one of your user directories.
 Then, in 
\family typewriter
flags.txt
\family default
, add all the necessary linker flags in the same way as done above with
 
\family typewriter
Makefile.user
\family default
.
\end_layout

\begin_layout Subsection
Compiling Your Own Object Code
\end_layout

\begin_layout Standard
There comes a time when you would like many separate projects to reuse your
 own custom code, akin to using a library.
 For example, you may have several utility functions or classes that you
 would like all projects to have access to.
 Let's say you have the two files 
\family typewriter
myutils.h
\family default
 and 
\family typewriter
myutils.cpp
\family default
 that contain your custom functions and classes.
 At this point, all that is necessary is to place these files in some directory,
 say 
\family typewriter
~/code/allosystem/myutils/
\family default
, and add the following line to your existing Makefile.user file:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

RUN_SRC_DIRS += myutils/
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
Troubleshooting
\end_layout

\begin_layout Subsection
CasE SensitiviTy
\end_layout

\begin_layout Standard
If your commands are not working, it is possible that the case of one or
 more characters in the command is wrong.
 Many Unix systems are case sensitive.
\end_layout

\begin_layout Subsection
I Can't Find The '~' Directory!
\end_layout

\begin_layout Standard
The character '
\family typewriter
~
\family default
' designates the home directory of the current user.
 This is usually where you start out when you first open a terminal.
 The exact location of 
\family typewriter
~
\family default
 varies by platform.
 If you want to know exactly where it is, enter the following in the terminal
 
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

$ file ~
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
`No such file or directory'
\end_layout

\begin_layout Standard
This error message is typically the result of misspelling a file or directory
 name or being in the wrong directory.
 Always use tab autocompletion when typing file/directory names to ensure
 that they exist and are spelled correctly.
\end_layout

\begin_layout Subsection
make: Nothing to be done for `xxx'.
\end_layout

\begin_layout Standard
This means all dependencies of the rule you specified are up-to-date.
\end_layout

\begin_layout Subsection
make: *** No rule to make target `xxx'.
 Stop.
\end_layout

\begin_layout Standard
The Makefile does not contain the rule you specified.
 The rule is the thing you are specifying after typing 
\family typewriter
make
\family default
.
 If you are attempting to build and run a source file, then this message
 means that the directory of the source file does not exist where you specified.
 A common cause is that you are in the wrong directory.
 Always use tab autocompletion to ensure that you have file paths correct.
 Another cause is that you are trying to build and run a source file that
 is not in 
\family typewriter
work/
\family default
 or one of your build-and-run user directories (
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Custom-Project-Directories"

\end_inset

).
\end_layout

\begin_layout Subsection
MinGW/MSYS: Spaces in User Name
\end_layout

\begin_layout Standard
MSYS simply does not like user names with spaces in them.
 If your user name contains spaces, then it will create problems with many
 of the build tools.
 To solve the problem, you must change your user name in MSYS.
 Add the line 
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

set USERNAME=<myname> 
\end_layout

\end_inset

to the beginning of 
\family typewriter
C:
\backslash
MinGW
\backslash
msys
\backslash
1.0
\backslash
msys.bat
\family default
 where 
\family typewriter
<myname>
\family default
 does not have spaces.
\end_layout

\begin_layout Subsection
MinGW/MSYS: Permission Denied
\end_layout

\begin_layout Standard
If you see a message `Permission denied', it is possible that the Windows
 Application Experience service is not configured properly.
 Usually, logging out of Windows and logging back in fixes the problem (no
 need to restart Windows).
 If the problem persists, you will need to manually configure Windows group
 policies.
\end_layout

\begin_layout Standard
To configure group policies, click the Start button and in the search bar
 type: 
\family typewriter
gpedit.msc
\family default
.
 Click this file to start the Local Group Policy Editor.
 Next, navigate to 
\family typewriter
Local Computer Policy -> Computer Configuration -> Administrative Templates
 -> Windows Components -> Application Compatibility
\family default
 and do the following
\end_layout

\begin_layout Itemize
Select Turn Off Application Compatibility Engine 
\end_layout

\begin_layout Itemize
Select Enabled under the Settings tab 
\end_layout

\begin_layout Itemize
Select Turn off Program Compatibility Assistant 
\end_layout

\begin_layout Itemize
Select Enabled under the Settings tab
\end_layout

\begin_layout Standard
See 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://www.blackviper.com/windows-services/application-experience/
\end_layout

\end_inset

 for more information.
\end_layout

\begin_layout Subsection
Bash Script (.sh file) Does Not Execute (Properly)
\end_layout

\begin_layout Standard
If you have problems trying to execute a Bash script (
\family typewriter
.
\family default
sh file), then it is possible that its file mode is incorrect.
 Make the script executable by running 
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

$ chmod u+x <filename>.sh
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
'<cmath> not found' When Compiling Sources
\end_layout

\begin_layout Standard
This occurs for users with OSX 10.7 and above who have installed Xcode 4.4.1
 and above.
 The cause is that Xcode is not found by the build system.
 To fix the problem, ensure that Xcode.app is placed in 
\family typewriter
/Applications
\family default
 and not 
\family typewriter
~/Applications
\family default
 or some other folder.
 If you cannot navigate to 
\family typewriter
/Applications
\family default
 from Finder, then open a Terminal and type 
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

$ open /Applications
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Problems With Multiple Versions of Xcode
\end_layout

\begin_layout Standard
If you have older versions of Xcode installed and want to remove them (i.e.,
 to save space or fix installation problems) you can uninstall them by running
 in a terminal
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

$ sudo /Developer/Library/uninstall-devtools --mode=all
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Typically, you will want to remove old versions 
\emph on
before
\emph default
 trying to install a newer version.
 If you want to keep multiple versions of Xcode installed on your machine,
 you can switch between them by running
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

$ sudo xcode-select -switch [path to Xcode]
\end_layout

\end_inset

where the path after 
\family typewriter
-switch
\family default
 is the version of Xcode you want to use, e.g.
 
\family typewriter
/Applications/Xcode.app/
\family default
.
\end_layout

\end_body
\end_document
