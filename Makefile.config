#=========================================================================
# AlloCore main makefile configuration
#=========================================================================

# Operating system: 'macosx', 'linux', or 'windows'
UNAME := $(shell uname)
ifeq ($(UNAME), Linux)
	PLATFORM	= linux
else ifeq ($(UNAME), Darwin)
	PLATFORM	= macosx
else
	PLATFORM	= windows
endif

# Architecture: '32', '64', or '32_64' (macosx only)
UNAMEM := $(shell uname -m)
ifeq ($(UNAMEM), x86_64)
	ARCH = 64
else
	ARCH = 32
endif

# Build configuration: 'Release' or 'Debug'
BUILD_CONFIG	= Release


# Mac OS X version; 10_4 or 10_5
OSX_VERSION	= 10_5

BIG_ENDIAN	= 0
AUDIO_BINDING	= PortAudio
WINDOW_BINDING	= GLUT
RUNTIME_BINDING	= APR
IMAGE_BINDING	= FreeImage
AUTORUN_TESTS	= 1
STRICT_WARNINGS = 1

#=========================================================================
# Customize to fit your system
#=========================================================================
PREFIX		= /usr/local
CONFPREFIX	= $(PREFIX)/etc
MANPREFIX	= $(PREFIX)/share/man

LIB_DIRS	= /usr/lib
INC_DIRS	= /usr/include
CFLAGS		=
LFLAGS		= -lm -lstdc++
DLIBFLAGS	:= -Wl,-single_module -compatibility_version 1 \
			-current_version 1

#-------------------------------------------------------------------------
# Default variables
#-------------------------------------------------------------------------
AR		= ar cr
CC		= g++
INSTALL		= install
RANLIB		= ranlib
LIB_NAME	= allocore
SLIB_EXT	= a

BUILD_DIR	= build
SRC_DIR		= src
GFX_DIR		= graphics
IO_DIR		= io
MATH_DIR	= math
PRO_DIR		= protocol
SPA_DIR		= spatial
SND_DIR		= sound
SYS_DIR		= system
TYP_DIR		= types
TEST_DIR	= unitTests

# These are defined according to platform
DLIB_EXT	=
DLIB_OPT	=
DEV_DIR		=

#=========================================================================
# DO NOT EDIT BELOW!
#=========================================================================

#-------------------------------------------------------------------------
# Platform specific section
#-------------------------------------------------------------------------
# Linux:
ifeq ($(PLATFORM), linux)
	INC_DIRS  += $(PREFIX)/include
	LIB_DIRS  += $(PREFIX)/lib

	ifeq ($(ARCH), 32)
		CFLAGS += -m32
	else ifeq ($(ARCH), 64)
		CFLAGS += -m64
	endif

	CFLAGS  += -D__LINUX__
	LFLAGS  += -lrt

	DLIB_EXT = so
	DLIB_OPT = shared
	DEV_DIR  = dev/linux32

# Mac OS X:
else ifeq ($(PLATFORM), macosx)
	ifeq ($(ARCH), 32)
		CFLAGS += -arch i386
	else ifeq ($(ARCH), 64)
		CFLAGS += -arch x86_64
	else ifeq ($(ARCH), 32_64)
		CFLAGS += -arch i386 -arch x86_64
	endif

	ifeq ($(OSX_VERSION), 10_5)
		CFLAGS += -isysroot /Developer/SDKs/MacOSX10.5.sdk -mmacosx-version-min=10.5 -fvisibility=default
	else ifeq ($(OSX_VERSION), 10_4)
		CFLAGS += -isysroot /Developer/SDKs/MacOSX10.4u.sdk -mmacosx-version-min=10.4
	endif

	LFLAGS	+= -framework Carbon
	DLIB_EXT = dylib
	DLIB_OPT = dynamiclib
	DEV_DIR  = dev/osx

# Windows
else ifeq ($(PLATFORM), windows)
endif


#-------------------------------------------------------------------------
# Finalize compilation flags
#-------------------------------------------------------------------------

INC_DIRS += include $(DEV_DIR)/include
LIB_DIRS += $(DEV_DIR)/lib

ifeq ($(RUNTIME_BINDING), APR)
	LFLAGS += -lapr-1
endif

ifeq ($(BUILD_CONFIG), Release)
	CFLAGS += -O3 -fpeel-loops
else
endif

ifneq ($(STRICT_WARNINGS), 0)
	CFLAGS += \
		-Wall -Wreturn-type -Wnon-virtual-dtor -Woverloaded-virtual \
		-Wformat -Wmissing-braces -Wparentheses -Wswitch \
		-Wunused-variable -Wsign-compare -Wno-unknown-pragmas
endif

#-------------------------------------------------------------------------
# Define dependent variables
#-------------------------------------------------------------------------
SLIB_FILE	= lib$(LIB_NAME).$(SLIB_EXT)
DLIB_FILE	= lib$(LIB_NAME).$(DLIB_EXT)
BIN_DIR		= $(BUILD_DIR)/$(BUILD_CONFIG)
OBJ_DIR		= $(BIN_DIR)/obj
VPATH		= $(addprefix $(SRC_DIR)/, $(GFX_DIR) $(IO_DIR) $(PRO_DIR) $(MATH_DIR) $(SND_DIR) $(SPA_DIR) $(SYS_DIR) $(TYP_DIR))
