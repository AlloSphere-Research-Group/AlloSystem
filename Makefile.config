#=========================================================================
# AlloCore main makefile configuration
#=========================================================================
#=========================================================================
# Uncomment your system -or- use command-line argument PLATFORM='platform'
#=========================================================================
PLATFORM	= macosx
#PLATFORM	= linux
#PLATFORM	= windows

BIG_ENDIAN	= 0
BUILD_CONFIG	= release

AUDIO_BINDING	= PortAudio
WINDOW_BINDING	= GLUT
RUNTIME_BINDING	= APR
AUTORUN_TESTS	= 1
STRICT_WARNINGS = 1

#=========================================================================
# Customize to fit your system
#=========================================================================
PREFIX     = /usr/local
CONFPREFIX = $(PREFIX)/etc
MANPREFIX  = $(PREFIX)/share/man

LIBS       = -L$(PREFIX)/lib -L/usr/lib

CFLAGS     = -I. -I$(PREFIX)/include -I/usr/include \
             -Wall \
             -D__STDC_CONSTANT_MACROS -D__STDC_LIMIT_MACROS

LFLAGS     = $(LIBS) -lm -lstdc++

DLIBFLAGS := -Wl,-single_module -compatibility_version 1 \
             -current_version 1

#-------------------------------------------------------------------------
# Default variables
#-------------------------------------------------------------------------
AR		= ar cr
CC		= g++
INSTALL		= install
RANLIB		= ranlib
LIB_NAME	= allocore
SLIB_EXT	= a

BUILD_DIR	= build
SRC_DIR		= src
IO_DIR		= io
MATH_DIR	= math
PRO_DIR		= protocol
SYS_DIR		= system
TYPES_DIR	= types
TEST_DIR	= unitTests

# These are defined according to platform
DLIB_EXT	=
DLIB_OPT	=
DEV_DIR		=

#=========================================================================
# DO NOT EDIT BELOW!
#=========================================================================

#-------------------------------------------------------------------------
# Platform specific section
#-------------------------------------------------------------------------
# Linux:
ifeq ($(PLATFORM), linux)
	LFLAGS  += -lrt
	CFLAGS  += -D__LINUX__
	DLIB_EXT = so
	DLIB_OPT = shared
	DEV_DIR  = dev/linux32
endif

# Mac OS X:
ifeq ($(PLATFORM), macosx)
	LFLAGS	+= -framework Carbon
	DLIB_EXT = dylib
	DLIB_OPT = dynamiclib
	DEV_DIR  = dev/osx
endif

# Windows
ifeq ($(PLATFORM), windows)
endif


#-------------------------------------------------------------------------
# Finalize compilation flags
#-------------------------------------------------------------------------

INC_DIRS = include $(DEV_DIR)/include

LFLAGS += -L$(DEV_DIR)/lib

ifeq ($(RUNTIME_BINDING), APR)
	LFLAGS += -lapr-1
endif

ifeq ($(BUILD_CONFIG), release)
	CFLAGS += -O3 -fpeel-loops
else
endif

ifneq ($(STRICT_WARNINGS), 0)
	CFLAGS += \
		-Wreturn-type -Wnon-virtual-dtor -Woverloaded-virtual \
		-Wformat -Wmissing-braces -Wparentheses -Wswitch \
		-Wunused-variable -Wsign-compare -Wno-unknown-pragmas
endif

#-------------------------------------------------------------------------
# Define dependent variables
#-------------------------------------------------------------------------
SLIB_FILE	= lib$(LIB_NAME).$(SLIB_EXT)
DLIB_FILE	= lib$(LIB_NAME).$(DLIB_EXT)
BIN_DIR		= $(BUILD_DIR)/$(BUILD_CONFIG)
OBJ_DIR		= $(BIN_DIR)/obj
VPATH		= $(addprefix $(SRC_DIR)/, $(IO_DIR) $(PRO_DIR) $(MATH_DIR) $(SYS_DIR) $(TYPES_DIR))
